/**
 * Author:     Crazy Broke Asians
 * Date:       Dec-08-2023
 * Course:     CS 3505, University of Utah
 * Assignment: A9: An Educational App
 * File Contents
 *      It contains all necessary information needed to form a zoomed-in/out popup.
*/

#ifndef VIEW_H
#define VIEW_H

#include <QGraphicsOpacityEffect>
#include <QMainWindow>
#include <QLabel>
#include <QSet>
#include <QHBoxLayout>
#include <QPropertyAnimation>
#include <QTimer>
#include <QPalette>
#include "model.h"
#include "popupwindow.h"
#include "quiz.h"

QT_BEGIN_NAMESPACE
namespace Ui { class view; }
QT_END_NAMESPACE

class view : public QMainWindow
{
    Q_OBJECT

    ///
    /// \brief previousState
    /// Stores the previous state (screen) for back button functionality.
    ///
    QString previousState;

public:

    ///
    /// \brief view
    ///     A constructor.
    /// \param model - Reference to the model.
    /// \param parent - The parent widget.
    ///
    view(Model& model, QWidget *parent = nullptr);

    ///
    /// \brief A destructor
    ///
    ~view();

    ///
    /// \brief closeEvent
    /// Handles window close event.
    ///
    void closeEvent(QCloseEvent *event);

private slots:
    /*
     * Button clicked slots are auto-generated by Qt, which makes the code-style looking different.
     */

    ///
    /// \brief on_playButton_clicked
    /// Handles play button clicked event.
    ///
    void on_playButton_clicked();

    ///
    /// \brief on_backButton_clicked
    /// Handles back button clicked event.
    ///
    void on_backButton_clicked();

    ///
    /// \brief on_quizButton_clicked
    /// Handles quiz button clicked event.
    ///
    void on_quizButton_clicked();

    // india buttons

    ///
    /// \brief on_indiaButton_clicked
    /// Handles India country marker button clicked event.
    ///
    void on_indiaButton_clicked();

    ///
    /// \brief on_hawaMahal_clicked
    /// Handles hawa mahal button (India) clicked event.
    ///
    void on_hawaMahal_clicked();

    ///
    /// \brief on_tajMahal_clicked
    /// Handles taj mahal button (India) clicked event.
    ///
    void on_tajMahal_clicked();

    ///
    /// \brief on_paniPuri_clicked
    /// Handles pani puri button (India) clicked event.
    ///
    void on_paniPuri_clicked();

    ///
    /// \brief on_biryani_clicked
    /// Handles biryani button (India) clicked event.
    ///
    void on_biryani_clicked();

    // korea buttons

    ///
    /// \brief on_koreaButton_clicked
    /// Handles Korea country marker button clicked event
    ///
    void on_koreaButton_clicked();

    ///
    /// \brief on_bulguksaButton_clicked
    /// Handles bulguksa button (Korea) clicked event
    ///
    void on_bulguksaButton_clicked();

    ///
    /// \brief on_gyeongbokgungButton_clicked
    /// Handles gyeonbokgung button (Korea) clicked event
    ///
    void on_gyeongbokgungButton_clicked();

    ///
    /// \brief on_tteokbokkiButton_clicked
    /// Handles tteokbokki button (Korea) clicked event
    ///
    void on_tteokbokkiButton_clicked();

    ///
    /// \brief on_bossamButton_clicked
    /// Handles bossam button (Korea) clicked event
    ///
    void on_bossamButton_clicked();

    // thailand buttons

    ///
    /// \brief on_thailandButton_clicked
    /// Handles Thailand country marker button clicked event
    ///
    void on_thailandButton_clicked();

    ///
    /// \brief on_grandPalaceButton_clicked
    /// Handles grand palace button (Thailand) clicked event
    ///
    void on_grandPalaceButton_clicked();

    ///
    /// \brief on_watMuangButton_clicked
    /// Handles wat muang button (Thailand) clicked event
    ///
    void on_watMuangButton_clicked();

    ///
    /// \brief on_tomYumButton_clicked
    /// Handles tom yum button (Thailand) clicked event
    ///
    void on_tomYumButton_clicked();

    ///
    /// \brief on_stickyRiceButton_clicked
    /// Handles sticky rice button (Thailand) clicked event
    ///
    void on_stickyRiceButton_clicked();

    ///
    /// \brief updateState
    ///     Updates the previous state.
    /// \param state - The previous state.
    ///
    void updateState(QString state);

private:
    ///
    /// \brief ui
    /// UI for the view (main window).
    ///
    Ui::view *ui;

    ///
    /// \brief Country
    /// The Country enum, it represents three countries.
    ///
    enum Country {India, Korea, Thailand};

    ///
    /// \brief IndiaPlace
    /// The IndiaPlace enum represents four places in India.
    ///
    enum IndiaPlace{HawaMaha, TajMahal, PaniPuri, Biryani};

    ///
    /// \brief indiaCompleteList
    /// Contains visited places in India.
    ///
    QSet<IndiaPlace> indiaCompleteList;

    ///
    /// \brief KoreaPlace
    /// The KoreaPlace enum represents four places in Korea.
    ///
    enum KoreaPlace{Gyeongbokgung, Bulguksa, Tteokbokki, Bossam};

    ///
    /// \brief koreaCompleteList
    /// Contains visited places in Korea.
    ///
    QSet<KoreaPlace> koreaCompleteList;

    ///
    /// \brief ThailandPlace
    /// The ThailandPlace enum represents four places in Thailand.
    ///
    enum ThailandPlace{GrandPalace, WatMuang, TomYum, StickyRice};

    ///
    /// \brief ThailandCompleteList
    /// Contains visited places in Thailand.
    ///
    QSet<ThailandPlace> ThailandCompleteList;

    ///
    /// \brief backgroundLabel
    /// A pointer to background label of window.
    ///
    QLabel *backgroundLabel;

    ///
    /// \brief popUpWindow
    /// A pop-up window object.
    ///
    PopUpWindow popUpWindow;

    ///
    /// \brief quizWindow
    /// A quiz window object.
    ///
    Quiz quizWindow;

    // shadow effect on text
    ///
    /// \brief applyShadowEffect
    ///     Sets the shawdow effect on a widget.
    /// \param widget - A widget to apply shawdow effect on.
    ///
    void applyShadowEffect(QWidget *widget);

    ///
    /// \brief showShadowEffect
    /// Applies the shadow effect on labels.
    ///
    void showShadowEffect();

    ///
    /// \brief showShadowPlayButton
    /// Applies the shadow eefect on the play button.
    ///
    void showShadowPlayButton();

    // widgets fade in/out
    ///
    /// \brief fadeInWelcomeLabel
    /// Fades in the welcome screen's labels.
    ///
    void fadeInWelcomeLabel();

    ///
    /// \brief fadeOutWelcomeLabel
    /// Fades out the welcome screen's labels.
    ///
    void fadeOutWelcomeLabel();

    ///
    /// \brief fadeInPlayButton
    /// Fades in the play button on the welcome screen.
    ///
    void fadeInPlayButton();

    ///
    /// \brief fadeOutPlayButton
    /// Fades out the play button when pressed on the welcome screen.
    ///
    void fadeOutPlayButton();

    ///
    /// \brief fadeInBackArrow
    /// Fades in the back arrow.
    ///
    void fadeInBackArrow();

    ///
    /// \brief fadeOutBackArrow
    /// Fades out the back arrow.
    ///
    void fadeOutBackArrow();

    ///
    /// \brief fadeInMarkers
    /// Fades in all the country's markers on the Asia country map.
    ///
    void fadeInMarkers();

    ///
    /// \brief fadeOutMarkers
    /// Fades out all the country's markers on the Asia country map.
    ///
    void fadeOutMarkers();

    ///
    /// \brief fadeInLandMarks
    ///     Fades in buttons for landmarks based on a specified country.
    /// \param country - The country whose landmarks will be faded in.
    ///
    void fadeInLandMarks(Country country);

    ///
    /// \brief hideLandMarks
    /// Hide the landmarks/foods of all countries.
    ///
    void hideLandMarks();

    ///
    /// \brief hideCheckMarks
    /// Hide checkmarks of landmarks/foods.
    ///
    void hideCheckMarks();

    ///
    /// \brief fadeEffect
    ///     Gives the effect of fading in and out on widgets like labels and buttons
    ///     on our window.
    /// \param startValue - The starting opacity value of the widget to start the fade effect.
    /// \param endValue - The ending opacity value of the widget to start the fade effect.
    /// \param duration - The amount of the time the fade effect will occur for.
    /// \param widget - On which widget the fade effect is applied for.
    ///
    void fadeEffect(double startValue, double endValue, int duration, QString widget);

    ///
    /// \brief setWidgetGraphicsEffect
    ///     Specifies on which widget we want the fade effect to occur on.
    /// \param name - The name of the widget.
    /// \param eff - The opacity effect to be applied on a widget.
    ///
    void setWidgetGraphicsEffect(QString name, QGraphicsOpacityEffect *eff);

    ///
    /// \brief fadeInBackgroundLabel
    /// Applies fade-in affect to the background label
    ///
    void fadeInBackgroundLabel();

    ///
    /// \brief setBgLabel
    ///     Sets the background label to the given QPixmap
    /// \param background - New background image.
    ///
    void setBgLabel(QPixmap background);

    ///
    /// \brief setBgLabelOpacity
    /// Sets the background label opacity to 0.5.
    ///
    void setBgLabelOpacity();

    ///
    /// \brief disableButtons
    /// Disables landmark/food buttons. Called when a popup window is displaying.
    ///
    void disableButtons();

    ///
    /// \brief enableButtonsAndCheck
    /// Enable landmark/food buttons and checkmark labels.
    ///
    void enableButtonsAndCheck();

    ///
    /// \brief showInfo
    /// Emit a signal to display a popup window and disable buttons on the mainwindow.
    ///
    void showInfo(QString);

    ///
    /// \brief country
    /// A string representing a country.
    ///
    QString country = "";

    ///
    /// \brief fadeInCountryLabels
    /// Fades in country name labels.
    ///
    void fadeInCountryLabels();

    ///
    /// \brief fadeOutCountryLabels
    /// Fades out country name labels.
    ///
    void fadeOutCountryLabels();

    ///
    /// \brief fadeInCheckmarks
    ///     Fades in checkmarks for landmarks/food related to a specified country.
    /// \param country - The country for which to show checkmarks.
    ///
    void fadeInCheckmarks(Country country);

signals:

    ///
    /// \brief changedState
    ///     Emitted to change the previous state in model.
    /// \param state - The current state.
    ///
    void changedState(QString state);

    ///
    /// \brief informModelToSend
    ///     Emitted to display text information on the popup window.
    /// \param name - A name of landmark/food.
    ///
    void informModelToSend(QString name);

    ///
    /// \brief generateRandomQuestion
    /// Generates questions in random order.
    ///
    void generateRandomQuestion();

    ///
    /// \brief resetButtons
    /// Resets the quiz buttons to default.
    ///
    void resetButtons();

    ///
    /// \brief sendQuizInfo
    ///     Emitted to display quiz text based on the current country.
    /// \param country - The current country.
    ///
    void sendQuizInfo(QString country);};

#endif // VIEW_H
